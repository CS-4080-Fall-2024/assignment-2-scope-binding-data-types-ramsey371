SudokuSolver.java:

Code referenced by the video below:

https://www.youtube.com/watch?app=desktop&v=H5i2ugoZLbg 

Code:

class Solution {
    private static final int SIZE = 9;
    private char[][] grid;

    public void solveSudoku(char[][] board) {
        this.grid = board;
        solve(0, 0);
    }

    private boolean solve(int row, int col) {
        if (row == SIZE) return true; // If we've filled all rows, we're done.

        if (grid[row][col] != '.') {
            return nextCell(row, col);
        }

        for (char num = '1'; num <= '9'; num++) {
            if (canPlaceNumber(row, col, num)) {
                grid[row][col] = num; // Place number
                if (nextCell(row, col)) return true; // Move to next cell
                grid[row][col] = '.'; // Reset on backtrack
            }
        }
        return false; // Trigger backtracking
    }

    private boolean nextCell(int row, int col) {
        if (col == SIZE - 1) {
            return solve(row + 1, 0); // Move to next row, first column
        }
        return solve(row, col + 1); // Move to next column
    }

    private boolean canPlaceNumber(int row, int col, char num) {
        for (int i = 0; i < SIZE; i++) {
            if (grid[row][i] == num || grid[i][col] == num) {
                return false; // Check row and column
            }
        }

        int startRow = (row / 3) * 3;
        int startCol = (col / 3) * 3;

        for (int i = startRow; i < startRow + 3; i++) {
            for (int j = startCol; j < startCol + 3; j++) {
                if (grid[i][j] == num) {
                    return false; // Check 3x3 box
                }
            }
        }
        return true; // Placement is valid
    }
}
     